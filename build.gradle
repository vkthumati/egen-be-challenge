/*
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

// Apply the java, eclipse and SpringBoot plugins to add support for Java, eclipse and SpringBoot 
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'spring4-rest-crud-operations'
    version =  '0.1.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework:spring-tx")
	compile("commons-lang:commons-lang:2.6")
	
	//This is Swagger generator
	compile "io.springfox:springfox-swagger2:2.5.0"
    compile 'io.springfox:springfox-swagger-ui:2.5.0'

	//This is the WADL generator
    compile("org.jvnet.ws.wadl:wadl-core:1.1.6") {
        exclude group: "junit"
    }
    compile("org.jvnet.ws.wadl:wadl-client-plugin:1.1.6") {
        exclude group: "junit"
    }
    
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
